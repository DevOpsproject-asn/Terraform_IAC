S3 bucket create and attach policy :
-----------------------------------

S3   ( folder)
bucket.tf
----------
resource "aws_s3_bucket" "khalids-bucket" {
  bucket = "khalids-bucket"
  acl    = "private"
}

main.tf
-------
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.0"
    }
  }
}

module "S3" {
  source = "./S3"

}

output.tf
-----------
# outputs for arn
output "user_arn" {
  value = "${aws_iam_user.newusers.0.arn}"
}

output "password" {
  value = aws_iam_user_login_profile.newusers.*.encrypted_password
}

policy.tf
---------
resource "aws_iam_policy" "s3_bucket_policy" {
  name = "s3_bucket_policy_for_IAM_user"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3:AbortMultipartUpload",
        "s3:Get*",
        "s3:List*",
        "s3:Delete*",
        "s3:PutObject"
      ],
      "Effect": "Allow",
      "Resource": "arn:aws:s3:::khalids-bucket"
    }
  ]
}
EOF

}
resource "aws_iam_account_password_policy" "strict" {
  minimum_password_length        = 8
  require_lowercase_characters   = true
  require_numbers                = true
  require_uppercase_characters   = true
  require_symbols                = true
  allow_users_to_change_password = true
}

users.tf
-----------
#Creating users
resource "aws_iam_user" "newusers" {
  count = length(var.username)
  name  = element(var.username, count.index)
}


resource "aws_iam_user_policy_attachment" "s3_bucket_policy_for_IAM_user" {
  #count      = length(var.username)
  user       = aws_iam_user.newusers.1.name
  policy_arn = aws_iam_policy.s3_bucket_policy.arn
}

resource "aws_iam_user_login_profile" "newusers" {
  count      = length(var.username)
  user    = aws_iam_user.newusers[count.index].name
  password_reset_required = true
  pgp_key = "keybase:waseem9028"
}

variable.tf
-------------
variable "username" {
  type    =     list
  default = ["abdul", "khalid"]
}

variable "region" {
  default = "us-east-1"
}

